	subroutine HMAT2(theta,var,nfix,jfix,elmax,kmax,kfit,ncomp)
c 06/01/92 11:11am HMAT2 is version of HMAT1 with dimension of theta etc
c changed from 10 to 20 (and calls VMATD2 accordingly)
c 06/06/89 08:00pm Lahey version. Version of HESMAT for EKDIST
c
	dimension FINFO(20,20),COVAR(20,20),UNIT(20,20)
	REAL*8 FINFO,COVAR,UNIT,DET,U,DEN
	REAL VAR(20),THETA(20)		!PARAM
	INTEGER JFIX(20)
C NEXT DECLARATIONS SPECIFIC FOR SCDIST
	INTEGER NP(20)
	LOGICAL AHIST,THIST,OBHIST,DEBUG,pon
      character*1 ans,UC
	logical discprt,slock,caplock
	common/dp/discprt
	COMMON/LOGBLK/AHIST,THIST,OBHIST
	EXTERNAL EXPLIK,GAULIK,OBLIK
c
C VERSION OF HESMAT FOR SCDIST SO WHOLE ERROR ESTIMATION CAN BE OVERLAID
C WITH FINFO,COVAR ETC LOCAL TO THIS SUBROUTINE. ELIK=NAME OF FUNCTION
C THAT CALCULATES MINUS LOG-LIKELIHOOD
C THIS VERSION PRINTS ONLY THE CORRELATION MATRIX. PARAMETERS ARE
C PRINTED IN PARTYP
C
	pon()=slock()
	debug()=caplock()
c
101   format(a1)
	FRACT=-1.0
	print 31
31	format('&Use default step size for error calculation [Y] ? ')
      read 101,ans
      if(UC(ans).ne.'N') goto 10
C
	print 11
11	FORMAT('&Fraction for calc of Hessian = ')
	call INPUTr(fract)
12	FORMAT(G13.6)
10	CONTINUE
C
	IF(THIST) CALL VMATD2(THETA,KMAX,FRACT,FINFO,COVAR,UNIT,DET,
     & explik,ELMAX,NFIX,JFIX)
	IF(AHIST) CALL VMATD2(THETA,KMAX,FRACT,FINFO,COVAR,UNIT,DET,
     & gaulik,ELMAX,NFIX,JFIX)
	IF(OBHIST) CALL VMATD2(THETA,KMAX,FRACT,FINFO,COVAR,UNIT,DET,
     & oblik,ELMAX,NFIX,JFIX)
cD	print 452,(JFIX(I),I=1,KMAX)
cD452	FORMAT(2X,10I8)
	IF(.NOT.debug()) GOTO 13
	if(pon()) print 14
	print 14
	if(pon()) write(7,14)
	if(discprt) write(8,14)
14	FORMAT(/,' Observed information matrix= ')
	DO 372 I=1,KFIT
	IF(I.GT.6) GOTO 57
	if(pon()) write(7,45)(FINFO(I,J),J=1,I)
      if(discprt) write(8,45)(FINFO(I,J),J=1,I)
	print 45,(FINFO(I,J),J=1,I)
	GOTO 372
57	if(pon()) write(7,45)(FINFO(I,J),J=1,I)
      if(discprt) write(8,45)(FINFO(I,J),J=1,I)
	print 45,(FINFO(I,J),J=1,6)
	if(pon()) write(7,451)(FINFO(I,J),J=7,I)
      if(discprt) write(8,451)(FINFO(I,J),J=7,I)
	print 451,(FINFO(I,J),J=7,I)
372	CONTINUE
	print 3711
3711	FORMAT(/,' Covariance matrix= ')
	DO 371 I=1,KFIT
	IF(I.GT.6) GOTO 58
	if(pon()) write(7,45)(COVAR(I,J),J=1,I)
      if(discprt) write(8,45)(COVAR(I,J),J=1,I)
	print 45,(COVAR(I,J),J=1,I)
	GOTO 371
58	if(pon()) write(7,45)(COVAR(I,J),J=1,6)
      if(discprt) write(8,45)(COVAR(I,J),J=1,6)
	print 45,(COVAR(I,J),J=1,6)
	if(pon()) write(7,451)(COVAR(I,J),J=7,I)
      if(discprt) write(8,451)(COVAR(I,J),J=7,I)
	print 451,(COVAR(I,J),J=7,I)
371	CONTINUE
13	CONTINUE
C TEMPORARY VAR(I)	-NOT NEEDED!
C	DO 37 I=1,KFIT
C37	VAR(I)=COVAR(I,I)	!TEMPORARY-REASSIGNED BELOW
C RE-ASSIGN VAR(I) (BEFORE COVAR REDEFINED AS CORRELATION MATRIX)
C SO THAT ALL KMAX VALUES INCLUDED, WITH VAR SET TO -1.0
C FOR FIXED PARAMETERS. ALSO DEFINE LOCAL ARRAY NP(I),I=1,2,..,KFIT
C WITH NP(I)=PARAM NUMBER CORRESPONDING TO I'TH ROW AND COL OF COVAR.
C E.G. IF KMAX=4 AND PARAM 2 IS FIXED NP=(1,3,4)
	I1=0
	DO 40 I=1,KMAX
	IF(JFIX(I).EQ.1) GOTO 411
	I1=I1+1
	VAR(I)=COVAR(I1,I1)
	NP(I1)=I
	GOTO 40
411	VAR(I)=-1.
40	CONTINUE
C
C CALC CORRELATION MATRIX IN COVAR- NO DO NOT ALTER COVAR
C	DO 38 I=1,KFIT
C	DO 39 J=I,KFIT
C	COVAR(I,J)=COVAR(I,J)/SQRT(COVAR(I,I)*COVAR(J,J))
C	COVAR(J,I)=COVAR(I,J)		!COVAR IS NOW CORRELATION MATRIX
C39	CONTINUE
C38	CONTINUE
C
C CALC CORRELATION MATRIX IN FINFO AND print (WITHOUT CHANGING COVAR)
	CONTINUE
	if(pon()) print 421
	print 421
421	FORMAT(/,' Correlation matrix=')
	DO 431 I=1,KFIT
	DO 431 J=1,KFIT
	DEN=COVAR(I,I)*COVAR(J,J)
	IF(DEN.LT.1.E-30) GOTO 432
	FINFO(I,J)=COVAR(I,J)/SQRT(DEN)
	GOTO 431
432	FINFO(I,J)=9999.	!COVAR NEGATIVE SO CANNOT CALC
431	CONTINUE
C
	DO 43 I=1,KFIT
	IF(I.GT.6) GOTO 56
	if(pon()) write(7,45) (FINFO(I,J),J=1,I)	!=CORRELATION
      if(discprt) write(8,45) (FINFO(I,J),J=1,I)	!=CORRELATION
	print 45, (FINFO(I,J),J=1,I)	!=CORRELATION
45	FORMAT(2X,6G13.6)
	GOTO 43
56	if(pon()) write(7,45) (FINFO(I,J),J=1,6)
      if(discprt) write(8,45) (FINFO(I,J),J=1,6)
	print 45, (FINFO(I,J),J=1,6)
	if(pon()) write(7,451)(FINFO(I,J),J=7,I)
      if(discprt) write(8,451)(FINFO(I,J),J=7,I)
	print 451,(FINFO(I,J),J=7,I)
451	FORMAT(15X,5G13.6,/)	!INDENT REMAINING VALUES IF ANY
43	CONTINUE
	if(pon()) write(7,46)DET
      if(discprt) write(8,46)DET
	print 46,DET
46	FORMAT( ' Determinant of INFO matrix=',G13.6//)
	DO 471 I=1,KFIT		!IF UNIT O.K. TO 1 IN 1E9 DO NOT PRINT
	DO 471 J=1,KFIT
	U=0.0D0
	IF(I.EQ.J) U=1.0D0
471	IF(DABS(UNIT(I,J)-U).GT.1.0D-9) GOTO 472
	GOTO 50
472	DO 47 I=1,KFIT
	if(pon()) write(7,45)(UNIT(I,J),J=1,KFIT)
      if(discprt) write(8,45)(UNIT(I,J),J=1,KFIT)
	print 45,(UNIT(I,J),J=1,KFIT)
47	CONTINUE
C
50	CONTINUE
C
C IN ALL DISTRIBUTIONS WITH NCOMP>1 THE LAST AREA IS NOT A PARAMETER
C BUT IS FOUND BY DIFFERENCE. ITS ERROR CAN BE FOUND FROM THE VAR AND
C COVAR OF THE OTHER AREAS AND STORED IN VAR(KMAX+1).
C VAR(1-A1-A2-...-AK)=VAR(A1)+...+VAR(AK)+SUM(FOR I.NE.J) OF [COV(AI,AJ)]
C (THIS IS JUST SUM OF ALL ELEMENTS OF COVAR MATRIX FOR AREAS)
C WHERE A1,A2... ARE THE AREAS THAT ARE ESTIMATED (NOT FIXED)
	IF(NCOMP.EQ.1) GOTO 999		!CALC  NOT NEEDED
C CONSTRUCT (IN UNIT) A VERSION OF COVAR THAT HAS ONLY THE AREA PARAMETERS
C IN IT
C  FOR THIST AREAS=PARAM 2,4,6,..	=MULT OF 2
C  FOR AHIST AREAS=PARAM 3,6,...	=MULT OF 3
C  FOR OBHIST AREA(1)=PARAM 3.		=MULT OF 3
	IF(THIST) KMOD=2
	IF(AHIST.OR.OBHIST) KMOD=3
	I1=0
	DO 51 I=1,KFIT
	J1=0
	IF(MOD(NP(I),KMOD).NE.0) GOTO 51
C I.E. IS PARAM NO FOR I'TH ROW AN EXACT MULTIPLE OF KMOD? IF NOT
C SKIP THIS ROW
	I1=I1+1
	DO 55 J=1,KFIT
	IF(MOD(NP(J),KMOD).NE.0) GOTO 55	!AND SKIP COLUMN
	J1=J1+1
	UNIT(I1,J1)=COVAR(I,J)
CD	print 551,I1,J1,I,J,COVAR(I,J)
CD551	FORMAT( ' I1,J1,I,J,COV(I,J)= ',4I3,G13.6)
55	CONTINUE
51	CONTINUE
	NAR=I1		!NUMBER OF AREAS ESTIMATED
	IF(NAR.NE.0) GOTO 54
	VAR(KMAX+1)=-1.		!IF NAR=0 E.G.ALL AREAS FIXED
	GOTO 999
54	S=0.
	DO 53 I=1,NAR
	DO 53 J=1,NAR
53	S=S+UNIT(I,J)
	VAR(KMAX+1)=S
	GOTO 999
C
999	CONTINUE
CD	print 45,(VAR(I),I=1,KMAX+1)
	RETURN
	END



