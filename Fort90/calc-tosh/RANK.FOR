	subroutine RANK(Q,KRQ,KCQ,KQ1,KQ2,IRANK)
c TO CALC RANK OF Q
c WORKING MATRICES R(I,J),WORK MUST BE IN MAIN PROG FOR DETERM AND SCLPRD
c TO WORK (DET1.FOR IS ATTEMPT TO EVADE THIS BUT NOT WORKING YET)- BUT
c STILL A PROBLEM- SIZE OF R IN CALL TO DETERM MUST BE FIXED WHEN PASSING
c FROM MAIN PROG TO 1ST LEVEL OF SUBROUTINE- BUT WANT TO CALL DETERM
c WITH SEVERAL DIFF SIZES INSIDE HERE SO IMPOSSIBLE!!
	REAL*8 Q(KQ1,KQ2),R(10,10),Z,DET
	INTEGER IROW(9),ICOL(9),ICROW(90,9),ICCOL(90,9)
c	COMMON/determ/det			!for MATINV -but arg for matinv2
C
	KR1=10
	KR2=10
C	KW=10		!DIMS OF R,WORK
C DEFINE 'ZERO'
	Z=1.D-10
C FIRST CHECK IF ZERO
	DO 1 I=1,KRQ
	DO 1 J=1,KCQ
1	IF(DABS(Q(I,J)).GT.Z) GOTO 10	!JUMP OUT IF NON-ZERO FOUND
	IRANK=0
	RETURN
10	CONTINUE
C NEXT CHECK FOR ROWS/COLS OF ZEROS- IF FOUND WILL SAVE MUCH CALC
	NZR=0		!NO OF NON-ZERO ROWS
	DO 200 I=1,KRQ
	I1=0		!FLAG
	DO 201 J=1,KCQ
	IF(DABS(Q(I,J)).GT.Z) I1=1	!NON-ZERO ELEMENT FOUND
201	CONTINUE
	IF(I1.EQ.1) NZR=NZR+1
200	CONTINUE
c	print 206,NZR
c206	FORMAT(' NZR= ',I8)
C
	NZC=0		!NO OF NON-ZERO COLS
	DO 202 J=1,KCQ
	I1=0		!FLAG
	DO 203 I=1,KRQ
c	print 210,I,J,Q(I,J)
c210	FORMAT( ' I,J,Q= ',2I8,G13.6)
	IF(DABS(Q(I,J)).GT.Z) I1=1	!NON-ZERO ELEMENT FOUND
203	CONTINUE
	IF(I1.EQ.1) NZC=NZC+1
202	CONTINUE
c	print 205,NZC
c205	FORMAT(' NZC= ',I8)
C
C GET MAX RANK=KM=MIN(KRQ,KCQ,NZR,NZC)
	KM=1000
	IF(KCQ.LT.KM) KM=KCQ
	IF(KRQ.LT.KM) KM=KRQ
	IF(NZR.LT.KM) KM=NZR
	IF(NZC.LT.KM) KM=NZC
c	print 2051,KM
c2051	FORMAT( ' KM= ',I4)
C
	IRANK=1
	IF(KM.EQ.1) RETURN
C
C GET ALL POSSIBLE MINORS KM X KM (WHOLE THING IF SQUARE), THEN
C (KM-1) X (KM-1),..., 2 X 2.
C
	DO 100 IR=KM,2,-1
	IR1=IR	!TO PREVENT WARNINGS
C   TABULATE COMBINATIONS
 	call COMBO(IR1,KRQ,ICROW,NCROW)	!FOR ROWS
c	DO 120 I=1,NCROW
c120	print 130,I,(ICROW(I,J),J=1,IR)
c130	FORMAT(I5,2X,8I8,/)
 	call COMBO(IR1,KCQ,ICCOL,NCCOL)	!FOR COLS
c	DO 1201 I=1,NCCOL
c1201	print 130,I,(ICCOL(I,J),J=1,IR)
C
C   GO THROUGH ALL COMBINATIONS
	DO 20 I=1,NCROW
	DO 30 J=1,NCCOL
	DO 40 L=1,IR1
	IROW(L)=ICROW(I,L)	!COPY COMBO TO IROW
	ICOL(L)=ICCOL(J,L)	!COPY COMBO TO ICOL
c	print 401,IROW(L),ICOL(L)
c401	FORMAT(' IROW,ICOL= ',2I8)
40	CONTINUE
	call MATMINOR(Q,R,IR1,IROW,ICOL,KQ1,KQ2,KR1,KR2)
c	CALL DATYP(R,'        ',.false.,IR1,IR1,KR1,KR2)
c	print 102,IR,IR1,DET
C  IS DETERM OF THIS MINOR NON-ZERO- IF SO LEAVE WITH RANK=IR
C	CALL DET1(R,IR1,DET,WORK,IFAIL,8,8,8)
C	CALL DETERM(R,IR1,DET,WORK,IFAIL)
C   TRY MATINV TO CALC DETERMINANT!!!     !(det is in COMMON)
c=	call MATINV(R,IR1,KR1,R,KR1)
	call MATINV2(R,ir1,kr1,R,kr1,.true.,det,ndscale) 	!inv(QTT) in Q1
c	print 102,IR,IR1,DET
c102	FORMAT( ' IR,IR1,DET= ',2I3,2X,D15.8)
C	print 102,IR,IFAIL,DET
C102	FORMAT( ' IR,IFAIL,DET= ',I3,I4,2X,G13.6)
C	IF(IABS(IFAIL).EQ.1) print 21,IR
C21	FORMAT( ' MATRIX SINGULAR. IR= ',I8/)
	IRANK=IR
c	print 301,DABS(DET)-Z
c301	FORMAT( ' DABS(DET)-Z= ',D15.8)
	IF(DABS(DET).GT.Z) RETURN
30	CONTINUE	!END OF J LOOP
20	CONTINUE	!END OF I LOOP
100	CONTINUE	!END OF IR LOOP
C IF END REACHED EVERY 2 X 2 HAS DET=0 SO RANK=1
	IRANK=1
	RETURN
	END


